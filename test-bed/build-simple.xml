<?xml version="1.0" encoding="UTF-8"?>

<!--build.xml generated by maven from project.xml version 0.1
  on date January 22 2004, time 2109-->

<project default="jar" name="grand" basedir=".">
  <property name="defaulttargetdir" value="target"/>
  <property name="libdir" value="target/lib"/>
  <property name="classesdir" value="target/classes"/>
  <property name="testclassesdir" value="target/test-classes"/>
  <property name="testreportdir" value="target/test-reports"/>
  <property name="distdir" value="dist"/>
  <property name="javadocdir" value="dist/docs/api"/>
  <property name="final.name" value="grand-0.1"/>

  <target name="init" description="o Initializes some properties">
    <mkdir dir="${libdir}"/>
    <condition property="noget">
      <equals arg2="only" arg1="${build.sysclasspath}"/>
    </condition>
  </target>

  <target name="compile" description="o Compile the code" depends="get-deps">
    <mkdir dir="${classesdir}"/>
    <javac destdir="${classesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="/home/moi/prog/java/Grand/src/java"/>
      </src>
      <classpath>
        <fileset dir="${libdir}">
          <include name="*.jar"/>
        </fileset>
      </classpath>
    </javac>
    <copy todir="${classesdir}">
      <fileset dir="/home/moi/prog/java/Grand/src/conf">
        <include name="*.properties"/>
      </fileset>
    </copy>
  </target>

  <target name="jar" description="o Create the jar" depends="compile,test">
    <jar jarfile="target/${final.name}.jar" excludes="**/package.html" basedir="${classesdir}"/>
  </target>

  <target name="clean" description="o Clean up the generated directories">
    <delete dir="${defaulttargetdir}"/>
    <delete dir="${distdir}"/>
  </target>

  <target name="dist" description="o Create a distribution" depends="jar, javadoc">
    <mkdir dir="dist"/>
    <copy todir="dist">
      <fileset dir="${defaulttargetdir}" includes="*.jar"/>
      <fileset dir="${basedir}" includes="LICENSE*, README*"/>
    </copy>
  </target>

  <target name="test" description="o Run the test cases" if="test.failure" depends="internal-test">
    <fail message="There were test failures."/>
  </target>

  <target name="internal-test" depends="compile-tests">
    <mkdir dir="${testreportdir}"/>
    <junit dir="./" failureproperty="test.failure" printSummary="yes" fork="true" haltonerror="true">
      <sysproperty key="basedir" value="."/>
      <formatter type="xml"/>
      <formatter usefile="false" type="plain"/>
      <classpath>
        <fileset dir="${libdir}">
          <include name="*.jar"/>
        </fileset>
        <pathelement path="${testclassesdir}"/>
        <pathelement path="${classesdir}"/>
      </classpath>
      <batchtest todir="${testreportdir}">
        <fileset dir="/home/moi/prog/java/Grand/src/test">
          <include name="**/*Test.java"/>
          <exclude name="**/NaughtyTest.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="compile-tests" depends="compile">
    <mkdir dir="${testclassesdir}"/>
    <javac destdir="${testclassesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="/home/moi/prog/java/Grand/src/test"/>
      </src>
      <classpath>
        <fileset dir="${libdir}">
          <include name="*.jar"/>
        </fileset>
        <pathelement path="${classesdir}"/>
      </classpath>
    </javac>
  </target>

  <target name="javadoc" description="o Generate javadoc" depends="jar">
    <mkdir dir="${javadocdir}"/>
    <tstamp>
      <format pattern="2004-yyyy" property="year"/>
    </tstamp>
    <property name="copyright" value="Copyright &amp;copy;  ggTools. All Rights Reserved."/>
    <property name="title" value="Grand: Graphical Representation of ANt Dependencies 0.1 API"/>
    <javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" sourcepath="/home/moi/prog/java/Grand/src/java" packagenames="net.ggtools.grand.*">
      <classpath>
        <fileset dir="${libdir}">
          <include name="*.jar"/>
        </fileset>
        <pathelement location="target/${final.name}.jar"/>
      </classpath>
    </javadoc>
  </target>

  <target name="get-deps" unless="noget" depends="init">
    <get dest="${libdir}/ant-1.6.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/ant/jars/ant-1.6.jar"/>
    <get dest="${libdir}/ant-launcher-1.6.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/ant/jars/ant-launcher-1.6.jar"/>
    <get dest="${libdir}/junit-3.8.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/junit/jars/junit-3.8.1.jar"/>
    <get dest="${libdir}/ant-1.5.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/ant/jars/ant-1.5.jar"/>
    <get dest="${libdir}/ant-optional-1.5.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/ant/jars/ant-optional-1.5.jar"/>
  </target>

  <target name="install-maven">
    <get dest="${user.home}/maven-install-latest.jar" usetimestamp="true" src="${repo}/maven/maven-install-latest.jar"/>
    <unjar dest="${maven.home}" src="${user.home}/maven-install-latest.jar"/>
  </target>
</project>
